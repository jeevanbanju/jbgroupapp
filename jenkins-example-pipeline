pipeline {
    agent any

    environment {
        GCP_PROJECT_ID = 'inspiring-dryad-400607'
        GAR_REGION = 'asia-south1'
        APP_IMAGE_NAME = 'todo-app'
        K8S_NAMESPACE = 'default'
    }

    tools {
        nodejs 'Node.js'
    }

    stages {
        stage('Git Checkout') {
            steps {
                // Check out the source code from your Git repository
                checkout scm
            }
        }

        stage('Docker Build') {
            steps {
                sh 'docker version'
                sh 'docker build -t todo-app .'
                sh 'docker image list'
            }
        }

        stage("Push Image to Artifact Registry") {
            steps {
                withCredentials([file(credentialsId: 'jenkins-poc-400711', variable: 'GC_KEY')]) {
                    sh """
                        gcloud auth activate-service-account --key-file=${GC_KEY}
                        docker tag todo-app:latest ${GAR_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/jenkins-repo/${APP_IMAGE_NAME}:${env.BUILD_ID}
                        gcloud auth configure-docker ${GAR_REGION}-docker.pkg.dev
                        docker push ${GAR_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/mohan/${APP_IMAGE_NAME}:${env.BUILD_ID}
                    """
                }
            }
        }

        stage('Deploy to App Engine') {
            steps {
                script {
                    // Authenticate with Google Cloud using a service account key
                    withCredentials([file(credentialsId: 'jenkins-poc-400711', variable: 'GC_KEY')]) {
                        sh """
                            gcloud auth activate-service-account --key-file=${GC_KEY}
                            gcloud config set project ${GCP_PROJECT_ID}
                            gcloud app deploy app.yaml --version ${env.BUILD_ID} --quiet
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
            // Send a success notification
            emailext (
                subject: 'Pipeline Succeeded',
                body: 'Your Jenkins pipeline has succeeded!',
                to: 'cryptojeevan6@gmail.com',
                attachLog: false
            )
        }
        failure {
            echo 'Pipeline failed!'
            // Send a failure notification
            emailext (
                subject: 'Pipeline Failed',
                body: 'Your Jenkins pipeline has failed. Please look into it!',
                to: 'cryptojeevan6@gmail.com',
                attachLog: true
            )
        }
    }
}
